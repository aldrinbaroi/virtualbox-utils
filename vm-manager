#!/bin/bash

source lib/dependency-manager
source vbox 

function showUsage
{
	echo ""
	echo "Usage: "
	echo "        create-vm (-c|-r) VM_CONFIG_FILE | -l VM_TO_BE_CLONED_NAME VM_NEW_NAME | -d VM_NAME | -h"
	echo ""
	echo "        -c Create VM"
	echo "        -r Recreate VM.  Existing VM will be delete."
	echo "                         Running VM will be forcefully shutdown & deleted"
	echo "        -l Clone VM"
	echo "        -d Delete VM.    Running VM will be forcefully shutdown & deleted"
	echo "        -h Show this usage text"
	echo ""
	exit 0
}

echo ""
[ ${#} = 0 ] && showUsage
while getopts "c:r:l:d:h" opt ${@}; do
	case ${opt} in
		c)
			VM_CONFIG_FILE=${OPTARG}
			load_configuration ${VM_CONFIG_FILE}
			create_vm	"${VM_NAME}"		\
					"${OS_TYPE}"		\
					"${OS_ISO_FILE}"	\
					"${VM_DISK_SIZE}"	\
					"${VM_RAM_SIZE}"	\
					"${VM_CPU_COUNT}"	\
					"${SATA_CNTLR_NAME}"	\
					"${SATA_CNTLR_TYPE}"	\
					"${SATA_CNTLR_DRIVER}"	\
					"${IDE_CNTLR_NAME}"	\
					"${IDE_CNTLR_TYPE}"	\
					"${VM_DISK_NAME}" 
			;;
		r)
			VM_CONFIG_FILE=${OPTARG}
			load_configuration ${VM_CONFIG_FILE}
			recreate_vm	"${VM_NAME}"		\
					"${OS_TYPE}"		\
					"${OS_ISO_FILE}"	\
					"${VM_DISK_SIZE}"	\
					"${VM_RAM_SIZE}"	\
					"${VM_CPU_COUNT}"	\
					"${SATA_CNTLR_NAME}"	\
					"${SATA_CNTLR_TYPE}"	\
					"${SATA_CNTLR_DRIVER}"	\
					"${IDE_CNTLR_NAME}"	\
					"${IDE_CNTLR_TYPE}"	\
					"${VM_DISK_NAME}" 
			;;
		l)
			VM_NAME=${OPTARG}
			shift $((OPTIND -1)); 
			VM_NEW_NAME="${@}" 
			clone_vm_ext "${VM_NAME}" "${VM_NEW_NAME}"
			;;
		d)
			VM_NAME=${OPTARG}
			delete_vm_ext "${VM_NAME}"
			;;
		h)
			showUsage
			;;
	esac
done 

#::END:: 
